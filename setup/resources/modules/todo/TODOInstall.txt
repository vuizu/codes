set -eux
set -o pipefail

# GCC
# add-apt-repository ppa:ubuntu-toolchain-r/test -y 








# CUTLASS
CUTLASS_VERSION=3.5.0
wget -q https://github.com/NVIDIA/cutlass/archive/refs/tags/v${CUTLASS_VERSION}.zip && \
    unzip -q v${CUTLASS_VERSION}.zip && \
    mkdir cutlass-${CUTLASS_VERSION}/build && \
    cd cutlass-${CUTLASS_VERSION}/build


# ${CUDA_TOOLKIT_ROOT_DIR} is the default search PATH
# CUTLASS_ENABLE_CUBLAS 和 CUTLASS_ENABLE_CUDNN 默认 OFF
# too heavy
cmake \
    -DCUTLASS_NVCC_ARCHS="75" \
    -DCUTLASS_LIBRARY_KERNELS=all \
    -DCUTLASS_ENABLE_CUBLAS=ON \
    -DCUBLAS_PATH=/usr/local/cuda \
    -DCUTLASS_ENABLE_CUDNN=ON \
    -DCUDNN_PATH=/usr/local/cudnn \
    -G Ninja .. && ninja








# NCCL
# NCCL_VERSION=$1
# wget https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.1-1_all.deb && \
#     dpkg -i cuda-keyring_1.1-1_all.deb && \
#     rm -rf cuda-keyring_1.1-1_all.deb && \
#     apt-install \
#     libnccl2=${NCCL_VERSION} \
#     libnccl-dev=${NCCL_VERSION} && \
#     dpkg -r cuda-keyring && \
#     dpkg --purge cuda-keyring


NCCL_HOME=$1
NCCL_VERSION=$2
CUDA_SHORT_VERSION=$3
NCCL_SUFFIX=${NCCL_VERSION}-1+cuda${CUDA_SHORT_VERSION}_x86_64
wget https://developer.nvidia.cn/compute/machine-learning/nccl/secure/${NCCL_VERSION}/agnostic/x64/nccl_${NCCL_SUFFIX}.txz && \
    tar -xJf nccl_${NCCL_SUFFIX}.txz && \
    mv nccl_${NCCL_SUFFIX} ${NCCL_HOME} && \
    cp ${NCCL_HOME}/include/* /usr/include/ &&\
    echo ${NCCL_HOME}/lib > /etc/ld.so.conf.d/nccl.conf && \
    rm -rf nccl*

# FROM SOURCE